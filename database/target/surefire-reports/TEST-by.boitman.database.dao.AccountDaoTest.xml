<?xml version="1.0" encoding="UTF-8"?>
<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="by.boitman.database.dao.AccountDaoTest" time="3.086" tests="6" errors="0" skipped="0" failures="0">
  <properties>
    <property name="java.specification.version" value="19"/>
    <property name="sun.cpu.isalist" value="amd64"/>
    <property name="sun.jnu.encoding" value="Cp1251"/>
    <property name="java.class.path" value="E:\Java\Java Enterprise\javaEE.HomeWork3.3\database\target\test-classes;E:\Java\Java Enterprise\javaEE.HomeWork3.3\database\target\classes;C:\Users\Eugenio\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Eugenio\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Eugenio\.m2\repository\org\hibernate\orm\hibernate-core\6.2.1.Final\hibernate-core-6.2.1.Final.jar;C:\Users\Eugenio\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Eugenio\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Eugenio\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Eugenio\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Eugenio\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\Eugenio\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Eugenio\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\Eugenio\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Eugenio\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Eugenio\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Eugenio\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Eugenio\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Eugenio\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Eugenio\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Eugenio\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Eugenio\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\Eugenio\.m2\repository\org\hibernate\hibernate-jpamodelgen-jakarta\5.6.15.Final\hibernate-jpamodelgen-jakarta-5.6.15.Final.jar;C:\Users\Eugenio\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\Eugenio\.m2\repository\org\apache\tomcat\tomcat-jdbc\10.1.7\tomcat-jdbc-10.1.7.jar;C:\Users\Eugenio\.m2\repository\org\apache\tomcat\tomcat-juli\10.1.7\tomcat-juli-10.1.7.jar;C:\Users\Eugenio\.m2\repository\org\projectlombok\lombok\1.18.26\lombok-1.18.26.jar;C:\Users\Eugenio\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.0-M1\junit-jupiter-api-5.10.0-M1.jar;C:\Users\Eugenio\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Eugenio\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0-M1\junit-platform-commons-1.10.0-M1.jar;C:\Users\Eugenio\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="user.variant" value=""/>
    <property name="java.vendor.url" value="https://java.oracle.com/"/>
    <property name="user.timezone" value="Europe/Moscow"/>
    <property name="user.country.format" value="BY"/>
    <property name="os.name" value="Windows 11"/>
    <property name="java.vm.specification.version" value="19"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="user.country" value="RU"/>
    <property name="sun.boot.library.path" value="C:\Users\Eugenio\.jdks\openjdk-19.0.2\bin"/>
    <property name="sun.java.command" value="C:\Users\Eugenio\AppData\Local\Temp\surefire15245580490288888134\surefirebooter-20230624203734514_3.jar C:\Users\Eugenio\AppData\Local\Temp\surefire15245580490288888134 2023-06-24T20-37-32_940-jvmRun1 surefire-20230624203734514_1tmp surefire_0-20230624203734514_2tmp"/>
    <property name="jdk.debug" value="release"/>
    <property name="surefire.test.class.path" value="E:\Java\Java Enterprise\javaEE.HomeWork3.3\database\target\test-classes;E:\Java\Java Enterprise\javaEE.HomeWork3.3\database\target\classes;C:\Users\Eugenio\.m2\repository\org\postgresql\postgresql\42.6.0\postgresql-42.6.0.jar;C:\Users\Eugenio\.m2\repository\org\checkerframework\checker-qual\3.31.0\checker-qual-3.31.0.jar;C:\Users\Eugenio\.m2\repository\org\hibernate\orm\hibernate-core\6.2.1.Final\hibernate-core-6.2.1.Final.jar;C:\Users\Eugenio\.m2\repository\jakarta\persistence\jakarta.persistence-api\3.1.0\jakarta.persistence-api-3.1.0.jar;C:\Users\Eugenio\.m2\repository\jakarta\transaction\jakarta.transaction-api\2.0.1\jakarta.transaction-api-2.0.1.jar;C:\Users\Eugenio\.m2\repository\org\jboss\logging\jboss-logging\3.5.0.Final\jboss-logging-3.5.0.Final.jar;C:\Users\Eugenio\.m2\repository\org\hibernate\common\hibernate-commons-annotations\6.0.6.Final\hibernate-commons-annotations-6.0.6.Final.jar;C:\Users\Eugenio\.m2\repository\io\smallrye\jandex\3.0.5\jandex-3.0.5.jar;C:\Users\Eugenio\.m2\repository\com\fasterxml\classmate\1.5.1\classmate-1.5.1.jar;C:\Users\Eugenio\.m2\repository\net\bytebuddy\byte-buddy\1.12.18\byte-buddy-1.12.18.jar;C:\Users\Eugenio\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Eugenio\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.0\jakarta.activation-api-2.1.0.jar;C:\Users\Eugenio\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.2\jaxb-runtime-4.0.2.jar;C:\Users\Eugenio\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.2\jaxb-core-4.0.2.jar;C:\Users\Eugenio\.m2\repository\org\eclipse\angus\angus-activation\2.0.0\angus-activation-2.0.0.jar;C:\Users\Eugenio\.m2\repository\org\glassfish\jaxb\txw2\4.0.2\txw2-4.0.2.jar;C:\Users\Eugenio\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.1\istack-commons-runtime-4.1.1.jar;C:\Users\Eugenio\.m2\repository\jakarta\inject\jakarta.inject-api\2.0.1\jakarta.inject-api-2.0.1.jar;C:\Users\Eugenio\.m2\repository\org\antlr\antlr4-runtime\4.10.1\antlr4-runtime-4.10.1.jar;C:\Users\Eugenio\.m2\repository\org\hibernate\hibernate-jpamodelgen-jakarta\5.6.15.Final\hibernate-jpamodelgen-jakarta-5.6.15.Final.jar;C:\Users\Eugenio\.m2\repository\com\h2database\h2\2.1.214\h2-2.1.214.jar;C:\Users\Eugenio\.m2\repository\org\apache\tomcat\tomcat-jdbc\10.1.7\tomcat-jdbc-10.1.7.jar;C:\Users\Eugenio\.m2\repository\org\apache\tomcat\tomcat-juli\10.1.7\tomcat-juli-10.1.7.jar;C:\Users\Eugenio\.m2\repository\org\projectlombok\lombok\1.18.26\lombok-1.18.26.jar;C:\Users\Eugenio\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.10.0-M1\junit-jupiter-api-5.10.0-M1.jar;C:\Users\Eugenio\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Eugenio\.m2\repository\org\junit\platform\junit-platform-commons\1.10.0-M1\junit-platform-commons-1.10.0-M1.jar;C:\Users\Eugenio\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="user.home" value="C:\Users\Eugenio"/>
    <property name="user.language" value="ru"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="java.version.date" value="2023-01-17"/>
    <property name="java.home" value="C:\Users\Eugenio\.jdks\openjdk-19.0.2"/>
    <property name="file.separator" value="\"/>
    <property name="basedir" value="E:\Java\Java Enterprise\javaEE.HomeWork3.3\database"/>
    <property name="java.vm.compressedOopsMode" value="Zero based"/>
    <property name="line.separator" value="&#10;"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="surefire.real.class.path" value="C:\Users\Eugenio\AppData\Local\Temp\surefire15245580490288888134\surefirebooter-20230624203734514_3.jar"/>
    <property name="user.script" value=""/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="java.runtime.version" value="19.0.2+7-44"/>
    <property name="user.name" value="Eugenio"/>
    <property name="stdout.encoding" value="Cp1251"/>
    <property name="path.separator" value=";"/>
    <property name="os.version" value="10.0"/>
    <property name="java.runtime.name" value="OpenJDK Runtime Environment"/>
    <property name="file.encoding" value="UTF-8"/>
    <property name="java.vm.name" value="OpenJDK 64-Bit Server VM"/>
    <property name="localRepository" value="C:\Users\Eugenio\.m2\repository"/>
    <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
    <property name="java.io.tmpdir" value="C:\Users\Eugenio\AppData\Local\Temp\"/>
    <property name="idea.version" value="2022.2"/>
    <property name="java.version" value="19.0.2"/>
    <property name="user.dir" value="E:\Java\Java Enterprise\javaEE.HomeWork3.3\database"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="native.encoding" value="Cp1251"/>
    <property name="java.library.path" value="C:\Users\Eugenio\.jdks\openjdk-19.0.2\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\Common Files\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Git\cmd;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\170\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\Tools\Binn\;C:\Program Files\Microsoft SQL Server\150\DTS\Binn\;C:\Program Files (x86)\Windows Kits\8.1\Windows Performance Toolkit\;C:\Program Files (x86)\apache-maven-3.9.0\bin;C:\Users\Eugenio\AppData\Local\Microsoft\WindowsApps;;."/>
    <property name="java.vm.info" value="mixed mode, sharing"/>
    <property name="stderr.encoding" value="Cp1251"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="java.vm.version" value="19.0.2+7-44"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="java.class.version" value="63.0"/>
  </properties>
  <testcase name="whenFindAllInvoked_ThenAllTheOwnersAreReturned" classname="by.boitman.database.dao.AccountDaoTest" time="0.167">
    <system-out><![CDATA[Hibernate: 
    drop table if exists account cascade 
Hibernate: 
    drop table if exists card cascade 
Hibernate: 
    drop table if exists users cascade 
Hibernate: 
    create table account (
        account_balance float(24) not null,
        created_at date not null,
        id bigint generated by default as identity,
        number_account bigint not null,
        user_id bigint,
        gender varchar(10) not null check (gender in ('MALE','FEMALE')),
        name varchar(50) not null,
        surname varchar(50) not null,
        primary key (id)
    )
Hibernate: 
    create table card (
        card_balance float(24) not null,
        created_at date not null,
        account_id bigint,
        card_number bigint not null,
        id bigint generated by default as identity,
        name varchar(50) not null,
        surname varchar(50) not null,
        primary key (id)
    )
Hibernate: 
    create table users (
        created_at date not null,
        id bigint generated by default as identity,
        gender varchar(10) check (gender in ('MALE','FEMALE')),
        role varchar(10) check (role in ('USER','ADMIN')),
        contact varchar(30) not null,
        email varchar(50) not null unique,
        name varchar(50) not null,
        password varchar(50) not null,
        surname varchar(50) not null,
        primary key (id)
    )
Hibernate: 
    alter table if exists account 
       add constraint FKra7xoi9wtlcq07tmoxxe5jrh4 
       foreign key (user_id) 
       references users
Hibernate: 
    alter table if exists card 
       add constraint FK8v67eys6tqflsm6hrdgru2phu 
       foreign key (account_id) 
       references account
Hibernate: 
    insert 
    into
        users
        (contact,created_at,email,gender,name,password,role,surname,id) 
    values
        (?,?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        account
        (account_balance,created_at,gender,number_account,name,surname,user_id,id) 
    values
        (?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        account
        (account_balance,created_at,gender,number_account,name,surname,user_id,id) 
    values
        (?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        card
        (account_id,card_balance,card_number,created_at,name,surname,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        card
        (account_id,card_balance,card_number,created_at,name,surname,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        users
        (contact,created_at,email,gender,name,password,role,surname,id) 
    values
        (?,?,?,?,?,?,?,?,default)
Hibernate: 
    update
        account 
    set
        account_balance=?,
        created_at=?,
        gender=?,
        number_account=?,
        name=?,
        surname=?,
        user_id=? 
    where
        id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.account_balance,
        a1_0.created_at,
        a1_0.gender,
        a1_0.number_account,
        a1_0.name,
        a1_0.surname,
        a1_0.user_id 
    from
        account a1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.contact,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.surname 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.contact,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.surname 
    from
        users u1_0 
    where
        u1_0.id=?
]]></system-out>
    <system-err><![CDATA[июн. 24, 2023 8:37:36 PM org.hibernate.Version logVersion
INFO: HHH000412: Hibernate ORM core version 6.2.1.Final
июн. 24, 2023 8:37:36 PM org.hibernate.cfg.Environment <clinit>
INFO: HHH000406: Using bytecode reflection optimizer
июн. 24, 2023 8:37:36 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl configure
WARN: HHH10001002: Using built-in connection pool (not intended for production use)
июн. 24, 2023 8:37:36 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001005: Loaded JDBC driver class: org.h2.Driver
июн. 24, 2023 8:37:36 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001012: Connecting with JDBC URL [jdbc:h2:mem:test_mem:demo]
июн. 24, 2023 8:37:36 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001001: Connection properties: {password=****, user=}
июн. 24, 2023 8:37:36 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl buildCreator
INFO: HHH10001003: Autocommit mode: false
июн. 24, 2023 8:37:36 PM org.hibernate.engine.jdbc.connections.internal.DriverManagerConnectionProviderImpl$PooledConnections <init>
INFO: HHH10001115: Connection pool size: 20 (min=1)
июн. 24, 2023 8:37:37 PM org.hibernate.engine.jdbc.dialect.internal.DialectFactoryImpl logSelectedDialect
INFO: HHH000400: Using dialect: org.hibernate.dialect.H2Dialect, version: 2.1.214
июн. 24, 2023 8:37:37 PM org.hibernate.bytecode.internal.BytecodeProviderInitiator buildBytecodeProvider
INFO: HHH000021: Bytecode provider name : bytebuddy
июн. 24, 2023 8:37:38 PM org.hibernate.metamodel.internal.MetadataContext registerAttribute
WARN: HHH015011: Unable to locate static metamodel field : by.boitman.database.entity.CreatableEntity_#created; this may or may not indicate a problem with the static metamodel
июн. 24, 2023 8:37:38 PM org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator initiateService
INFO: HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
июн. 24, 2023 8:37:38 PM org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl getIsolatedConnection
INFO: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@630e5803] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
июн. 24, 2023 8:37:38 PM org.hibernate.resource.transaction.backend.jdbc.internal.DdlTransactionIsolatorNonJtaImpl getIsolatedConnection
INFO: HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4cc070c2] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
июн. 24, 2023 8:37:38 PM org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase beforeScript
INFO: HHH000476: Executing script '[injected ScriptSourceInputNonExistentImpl script]'
]]></system-err>
  </testcase>
  <testcase name="whenFindAllByGenderInvoked_ThenAllTheAccountsOfGenderAreReturned" classname="by.boitman.database.dao.AccountDaoTest" time="0.019">
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.account_balance,
        a1_0.created_at,
        a1_0.gender,
        a1_0.number_account,
        a1_0.name,
        a1_0.surname,
        a1_0.user_id 
    from
        account a1_0 
    where
        a1_0.gender=?
Hibernate: 
    select
        u1_0.id,
        u1_0.contact,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.surname 
    from
        users u1_0 
    where
        u1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="whenFindAllByUserInvoked_ThenAllTheAccountsOfUserAreReturned" classname="by.boitman.database.dao.AccountDaoTest" time="0.008">
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.account_balance,
        a1_0.created_at,
        a1_0.gender,
        a1_0.number_account,
        a1_0.name,
        a1_0.surname,
        a1_0.user_id 
    from
        account a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        u1_0.name=?
Hibernate: 
    select
        u1_0.id,
        u1_0.contact,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.surname 
    from
        users u1_0 
    where
        u1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="whenFindAllByFilterContainsUserAndBalanceInvoked_ThenAllTheFilteredByUserAndBalanceAccountAreReturned" classname="by.boitman.database.dao.AccountDaoTest" time="0.021">
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.account_balance,
        a1_0.created_at,
        a1_0.gender,
        a1_0.number_account,
        a1_0.name,
        a1_0.surname,
        a1_0.user_id 
    from
        account a1_0 
    join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        a1_0.account_balance<=? 
        and a1_0.name=? offset ? rows fetch first ? rows only
Hibernate: 
    select
        u1_0.id,
        u1_0.contact,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.surname 
    from
        users u1_0 
    where
        u1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="whenFindById_ThenAllTheFilteredReturnsValidAccount" classname="by.boitman.database.dao.AccountDaoTest" time="0.007">
    <system-out><![CDATA[Hibernate: 
    select
        a1_0.id,
        a1_0.account_balance,
        a1_0.created_at,
        a1_0.gender,
        a1_0.number_account,
        a1_0.name,
        a1_0.surname,
        u1_0.id,
        u1_0.contact,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.surname 
    from
        account a1_0 
    left join
        users u1_0 
            on u1_0.id=a1_0.user_id 
    where
        a1_0.id=?
]]></system-out>
  </testcase>
  <testcase name="whenCreatedInvokedWithAccount_ThenAccountIsSaved" classname="by.boitman.database.dao.AccountDaoTest" time="0.009">
    <system-out><![CDATA[Hibernate: 
    insert 
    into
        account
        (account_balance,created_at,gender,number_account,name,surname,user_id,id) 
    values
        (?,?,?,?,?,?,?,default)
Hibernate: 
    insert 
    into
        card
        (account_id,card_balance,card_number,created_at,name,surname,id) 
    values
        (?,?,?,?,?,?,default)
Hibernate: 
    select
        a1_0.id,
        a1_0.account_balance,
        a1_0.created_at,
        a1_0.gender,
        a1_0.number_account,
        a1_0.name,
        a1_0.surname,
        a1_0.user_id 
    from
        account a1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.contact,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.surname 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.contact,
        u1_0.created_at,
        u1_0.email,
        u1_0.gender,
        u1_0.name,
        u1_0.password,
        u1_0.role,
        u1_0.surname 
    from
        users u1_0 
    where
        u1_0.id=?
Hibernate: 
    select
        c1_0.id,
        c1_0.account_id,
        c1_0.card_balance,
        c1_0.card_number,
        c1_0.created_at,
        c1_0.name,
        c1_0.surname 
    from
        card c1_0
]]></system-out>
  </testcase>
</testsuite>